<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Request Management</title>
    <link rel="stylesheet" href="styles.css"> <!-- Add your custom styles -->
</head>
<body>
    <div class="container">
        <h1>Request Management</h1>
        <div id="requestsContainer">
            <!-- Requests will be loaded dynamically here -->
        </div>
    </div>

    <script>
        // Fetch and display requests
        async function loadRequests() {
            const response = await fetch('/list-requests');
            if (!response.ok) {
                alert("Failed to load requests.");
                return;
            }

            const requests = await response.json(); // Array of request file names
            const container = document.getElementById('requestsContainer');
            container.innerHTML = ""; // Clear existing content

            if (requests.length === 0) {
                container.innerHTML = "<p>No requests found.</p>";
                return;
            }

            requests.forEach(fileName => {
                const requestDiv = document.createElement('div');
                requestDiv.className = "request-item";

                requestDiv.innerHTML = `
                    <p><strong>Request File:</strong> ${fileName}</p>
                    <button onclick="reactToRequest('${fileName}', 'accepted')">Accept</button>
                    <button onclick="reactToRequest('${fileName}', 'denied')">Deny</button>
                `;

                container.appendChild(requestDiv);
            });
        }

        // React to a request (accept or deny)
        async function reactToRequest(fileName, action) {
            const response = await fetch('/react-to-request', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ fileName, action })
            });

            if (response.ok) {
                alert(`Request "${fileName}" has been ${action}.`);
                loadRequests(); // Reload the requests list
            } else {
                alert(`Failed to ${action} the request. Please try again.`);
            }
        }
        async function loadRequests() {
    const response = await fetch('/list-requests');
    if (!response.ok) {
        alert("Failed to load requests.");
        return;
    }

    const requests = await response.json(); // Array of { fileName, content }
    const container = document.getElementById('requestsContainer');
    container.innerHTML = ""; // Clear existing content

    if (requests.length === 0) {
        container.innerHTML = "<p>No requests found.</p>";
        return;
    }

    requests.forEach(({ fileName, content }) => {
        const requestDiv = document.createElement('div');
        requestDiv.className = "request-item";

        requestDiv.innerHTML = `
            <p><strong>Request File:</strong> ${fileName}</p>
            <pre><strong>Content:</strong>\n${content}</pre>
            <button onclick="reactToRequest('${fileName}', 'accepted')">Accept</button>
            <button onclick="reactToRequest('${fileName}', 'denied')">Deny</button>
        `;

        container.appendChild(requestDiv);
    });
}

        // Initial load
        loadRequests();
    </script>
</body>
</html>